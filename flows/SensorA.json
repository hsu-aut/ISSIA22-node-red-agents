[{"id":"7b7701c05794d145","type":"tab","label":"Sensor A (GraphDB)","disabled":false,"info":""},{"id":"8c1eb7b48f60e8d5","type":"inject","z":"7b7701c05794d145","name":"Detect piece","props":[{"p":"delay","v":"250 + $random() * 250","vt":"jsonata"},{"p":"payload"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"{}","payloadType":"json","x":130,"y":120,"wires":[["758b3c046c61609f","dea71018d1bcc03c"]]},{"id":"a63047baf39e2d67","type":"comment","z":"7b7701c05794d145","name":"Start: WP arrives at A","info":"","x":140,"y":60,"wires":[]},{"id":"85c57238b5a5c077","type":"delay","z":"7b7701c05794d145","name":"Delay: Object passing sensor","pauseType":"delayv","timeout":"5","timeoutUnits":"seconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"allowrate":false,"outputs":1,"x":800,"y":120,"wires":[["05469d0829dbf1ef"]]},{"id":"05469d0829dbf1ef","type":"function","z":"7b7701c05794d145","name":"time_difference","func":"const sensorA_timeEndDetection = (msg.payload.sensorA_timeStartDetection + msg.delay); // time in s\nmsg.payload.sensorA_timeEndDetection = sensorA_timeEndDetection;\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1080,"y":120,"wires":[["e2398011f6a1d844"]]},{"id":"d366218d30d0ac09","type":"comment","z":"7b7701c05794d145","name":"Store travel duration","info":"","x":1090,"y":60,"wires":[]},{"id":"6c5a10c1b241318f","type":"comment","z":"7b7701c05794d145","name":"simulate WP passing trough sensor","info":"","x":800,"y":60,"wires":[]},{"id":"a12c22de262c0470","type":"http request","z":"7b7701c05794d145","name":"Insert Product Into Graph DB","method":"POST","ret":"txt","paytoqs":"ignore","url":"http://localhost:7200/repositories/AgentSummerSchool/statements","tls":"","persist":false,"proxy":"","authType":"","senderr":false,"x":1140,"y":280,"wires":[[]]},{"id":"6edb322e56658072","type":"function","z":"7b7701c05794d145","name":"store product in GraphDB","func":"msg.payload = `\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\nPREFIX agents: <http://www.hsu-hh.de/aut/ontologies/agent-summer-school#>\nINSERT DATA {\n    agents:Product_${msg.payload.barcode} a agents:Product;\n        agents:hasProductId \"${msg.payload.barcode}\";\n        agents:hasLength ${msg.payload.wp_length};\n        agents:timeAdded ${msg.payload.sensorA_timeStartDetection}.\n}`;\nmsg.headers = {};\nmsg.headers['Content-Type'] = 'application/sparql-update';\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":830,"y":280,"wires":[["a12c22de262c0470"]]},{"id":"758b3c046c61609f","type":"function","z":"7b7701c05794d145","name":"Generate random ID and travel duration","func":"// Creates a new random ID\nfunction makeID(length) {\n    const result           = [];\n    const characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    const charactersLength = characters.length;\n    for (let i = 0; i < length; i++ ) {\n      result.push(characters.charAt(Math.floor(Math.random() * charactersLength)));\n   }\n   return result.join('');\n}\n\nmsg.payload.barcode = makeID(6);\nnode.warn(\"id deteceted: \"+msg.payload.barcode);\n\n// Set the current ID globally so that we can simulate detection on Sensor B\nglobal.set(\"wpId\", msg.payload.barcode);\n\n// Get the last sensorA_timeDetection from the global store (so that next product will start at a later time)\n// Note that when starting the flow the first time, this time will be undefined -> set to 0\nlet sensorA_timeStartDetection = global.get(\"sensorA_timeStartDetection\");\n\nif (sensorA_timeStartDetection == undefined) {\n    sensorA_timeStartDetection = 0;\n    global.set(\"sensorA_timeStartDetection\", sensorA_timeStartDetection);\n} else {\n    sensorA_timeStartDetection = global.get(\"sensorA_timeStartDetection\") + Math.random() * 1000;\n    global.set(\"sensorA_timeStartDetection\", sensorA_timeStartDetection);\n}\nmsg.payload.sensorA_timeStartDetection = sensorA_timeStartDetection;\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":440,"y":120,"wires":[["85c57238b5a5c077"]]},{"id":"b61166d69b70c8ec","type":"comment","z":"7b7701c05794d145","name":"Store product with length in GraphDB","info":"","x":990,"y":220,"wires":[]},{"id":"806603570983d4c3","type":"comment","z":"7b7701c05794d145","name":"Generate ID and length","info":"","x":440,"y":60,"wires":[]},{"id":"856bb0c7aa0277c2","type":"comment","z":"7b7701c05794d145","name":"Request length from conveyor","info":"","x":580,"y":220,"wires":[]},{"id":"e2398011f6a1d844","type":"http request","z":"7b7701c05794d145","name":"","method":"GET","ret":"obj","paytoqs":"query","url":"http://localhost:1880/conveyor/distance-travelled","tls":"","persist":false,"proxy":"","authType":"","senderr":false,"x":570,"y":280,"wires":[["6edb322e56658072"]]},{"id":"dea71018d1bcc03c","type":"function","z":"7b7701c05794d145","name":"Set some global config data","func":"global.set(\"conveyor.start.x\", 0)\nglobal.set(\"conveyor.start.y\", 20)\nglobal.set(\"conveyor.start.z\", 2)\n\nglobal.set(\"conveyor.end.x\", 90)\nglobal.set(\"conveyor.end.y\", 20)\nglobal.set(\"conveyor.end.z\", 2)\n\nglobal.set(\"target.x\", 100)\nglobal.set(\"target.y\", 20)\nglobal.set(\"target.z\", 6)","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":420,"y":480,"wires":[[]]}]